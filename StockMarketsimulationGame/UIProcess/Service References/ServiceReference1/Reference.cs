//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UIProcess.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IInvestorService")]
    public interface IInvestorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvestorService/GetLoggedUser", ReplyAction="http://tempuri.org/IInvestorService/GetLoggedUserResponse")]
        bool GetLoggedUser(string UserName, string Logged);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvestorService/GetLoggedUser", ReplyAction="http://tempuri.org/IInvestorService/GetLoggedUserResponse")]
        System.Threading.Tasks.Task<bool> GetLoggedUserAsync(string UserName, string Logged);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvestorService/CreateNewUser", ReplyAction="http://tempuri.org/IInvestorService/CreateNewUserResponse")]
        bool CreateNewUser(string username, string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvestorService/CreateNewUser", ReplyAction="http://tempuri.org/IInvestorService/CreateNewUserResponse")]
        System.Threading.Tasks.Task<bool> CreateNewUserAsync(string username, string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvestorService/GetUserPassword", ReplyAction="http://tempuri.org/IInvestorService/GetUserPasswordResponse")]
        bool GetUserPassword(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvestorService/GetUserPassword", ReplyAction="http://tempuri.org/IInvestorService/GetUserPasswordResponse")]
        System.Threading.Tasks.Task<bool> GetUserPasswordAsync(string UserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvestorServiceChannel : UIProcess.ServiceReference1.IInvestorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvestorServiceClient : System.ServiceModel.ClientBase<UIProcess.ServiceReference1.IInvestorService>, UIProcess.ServiceReference1.IInvestorService {
        
        public InvestorServiceClient() {
        }
        
        public InvestorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvestorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvestorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvestorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetLoggedUser(string UserName, string Logged) {
            return base.Channel.GetLoggedUser(UserName, Logged);
        }
        
        public System.Threading.Tasks.Task<bool> GetLoggedUserAsync(string UserName, string Logged) {
            return base.Channel.GetLoggedUserAsync(UserName, Logged);
        }
        
        public bool CreateNewUser(string username, string Email, string Password) {
            return base.Channel.CreateNewUser(username, Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewUserAsync(string username, string Email, string Password) {
            return base.Channel.CreateNewUserAsync(username, Email, Password);
        }
        
        public bool GetUserPassword(string UserName) {
            return base.Channel.GetUserPassword(UserName);
        }
        
        public System.Threading.Tasks.Task<bool> GetUserPasswordAsync(string UserName) {
            return base.Channel.GetUserPasswordAsync(UserName);
        }
    }
}
